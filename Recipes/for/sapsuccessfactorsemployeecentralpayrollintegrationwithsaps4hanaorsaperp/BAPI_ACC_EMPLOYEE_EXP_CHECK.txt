FUNCTION bapi_acc_employee_exp_check.
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""$"$\SE:(1) Function Module BAPI_ACC_EMPLOYEE_EXP_CHECK, Start                                                                                                A
*$*$-Start: (1)---------------------------------------------------------------------------------$*$*
ENHANCEMENT 1  ZEIMP_HR_PAYROLL.    "active version
*

DATA: lo_exp_check TYPE REF TO co_hrpp_wsbapi_acc_employee_ex.
DATA: lo_exception TYPE REF TO cx_root.
DATA: lv_error     TYPE string.

DATA: ls_in  TYPE hrpp_wsbapi_acc_employee_exp_1.
DATA: ls_out TYPE hrpp_wsbapi_acc_employee_exp_c.

DATA: ls_bapiacgl04 TYPE bapiacgl04.
DATA: ls_bapiactx01 TYPE bapiactx01.
DATA: ls_bapiaccr04 TYPE bapiaccr04.
DATA: ls_bapiret2   TYPE bapiret2.
DATA: ls_bapiactr00 TYPE bapiactr00.
DATA: ls_bapiaccrpo TYPE bapiaccrpo.
DATA: ls_bapiextc   TYPE bapiextc.

DATA: ls_accountgl      TYPE LINE OF hrpp_wsbapiacgl04_tab.
DATA: ls_accounttax     TYPE LINE OF hrpp_wsbapiactx01_tab.
DATA: ls_currencyamount TYPE LINE OF hrpp_wsbapiaccr04_tab.
DATA: ls_extension1     TYPE LINE OF hrpp_wsbapiextc_tab.
DATA: ls_return         TYPE LINE OF hrpp_wsbapiret2_tab.
DATA: ls_travel         TYPE LINE OF hrpp_wsbapiactr00_tab.
DATA: ls_travelamount   TYPE LINE OF hrpp_wsbapiaccrpo_tab.


TRY.
    CREATE OBJECT lo_exp_check
      EXPORTING
        logical_port_name = 'LP_EMPCHECK'.

* set importing
    MOVE-CORRESPONDING documentheader TO ls_in-documentheader.

    CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
      EXPORTING
        datin         = documentheader-DOC_DATE
        format        = 'YYYY-MM-DD'
      IMPORTING
        DATEX         = ls_in-documentheader-DOC_DATE.

    CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
      EXPORTING
        datin         = documentheader-PSTNG_DATE
        format        = 'YYYY-MM-DD'
      IMPORTING
        DATEX         = ls_in-documentheader-PSTNG_DATE.

    CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
      EXPORTING
        datin         = documentheader-TRANS_DATE
        format        = 'YYYY-MM-DD'
      IMPORTING
        DATEX         = ls_in-documentheader-TRANS_DATE.




    LOOP AT accountgl INTO ls_bapiacgl04.
      MOVE-CORRESPONDING ls_bapiacgl04 TO ls_accountgl.

      CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
        EXPORTING
          datin         = ls_bapiacgl04-PSTNG_DATE
          format        = 'YYYY-MM-DD'
        IMPORTING
          DATEX         = ls_accountgl-PSTNG_DATE.

      APPEND ls_accountgl TO ls_in-accountgl-item .
    ENDLOOP.


    LOOP AT accounttax INTO ls_bapiactx01.
      MOVE-CORRESPONDING ls_bapiactx01 TO ls_accounttax.

      CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
        EXPORTING
          datin         = ls_bapiactx01-TAX_DATE
          format        = 'YYYY-MM-DD'
        IMPORTING
          DATEX         = ls_accounttax-TAX_DATE.

      APPEND ls_accounttax TO ls_in-accounttax-item.
    ENDLOOP.

    LOOP AT currencyamount INTO ls_bapiaccr04.
      MOVE-CORRESPONDING ls_bapiaccr04 TO ls_currencyamount.
      APPEND ls_currencyamount TO ls_in-currencyamount-item.
    ENDLOOP.


    LOOP AT extension1 INTO ls_bapiextc.
      MOVE-CORRESPONDING ls_bapiextc TO ls_extension1.
      APPEND ls_extension1 TO ls_in-extension1-item.
    ENDLOOP.

* RETURN

    LOOP AT travel INTO ls_bapiactr00.
      MOVE-CORRESPONDING ls_bapiactr00 TO ls_travel.

      CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
        EXPORTING
          datin         = ls_bapiactr00-PSTNG_DATE
          format        = 'YYYY-MM-DD'
        IMPORTING
          DATEX         = ls_travel-PSTNG_DATE.

      CALL FUNCTION 'FORMAT_DATE_4_OUTPUT'
        EXPORTING
          datin         = ls_bapiactr00-FM_TRANS_DATE
          format        = 'YYYY-MM-DD'
        IMPORTING
          DATEX         = ls_travel-FM_TRANS_DATE.

      APPEND ls_travel TO ls_in-travel-item.
    ENDLOOP.


    LOOP AT travelamount INTO ls_bapiaccrpo.
      MOVE-CORRESPONDING ls_bapiaccrpo TO ls_travelamount.
      APPEND ls_travelamount TO ls_in-travelamount-item.
    ENDLOOP.

* call method
    CLEAR ls_out.
    CALL METHOD lo_exp_check->bapi_acc_employee_exp_check
      EXPORTING
        input  = ls_in
      IMPORTING
        output = ls_out.

* get exporting
    clear accountgl[].
    LOOP AT ls_out-accountgl-item INTO ls_accountgl.
      MOVE-CORRESPONDING ls_accountgl TO ls_bapiacgl04.

      CONCATENATE ls_accountgl-PSTNG_DATE+0(4) ls_accountgl-PSTNG_DATE+5(2) ls_accountgl-PSTNG_DATE+8(2)
             into ls_bapiacgl04-PSTNG_DATE.

      APPEND ls_bapiacgl04 TO accountgl.
    ENDLOOP.

    clear accounttax[].
    LOOP AT ls_out-accounttax-item INTO ls_accounttax.
      MOVE-CORRESPONDING ls_accounttax TO ls_bapiactx01.

      CONCATENATE ls_accounttax-TAX_DATE+0(4) ls_accounttax-TAX_DATE+5(2) ls_accounttax-TAX_DATE+8(2)
             into ls_bapiactx01-TAX_DATE.

      APPEND ls_bapiactx01 TO accounttax.
    ENDLOOP.

    clear currencyamount[].
    LOOP AT ls_out-currencyamount-item INTO ls_currencyamount.
      MOVE-CORRESPONDING ls_currencyamount TO ls_bapiaccr04.
      APPEND ls_bapiaccr04 TO currencyamount.
    ENDLOOP.

    clear extension1[].
    LOOP AT ls_out-extension1-item INTO ls_extension1.
      MOVE-CORRESPONDING ls_extension1 TO ls_bapiextc.
      APPEND ls_bapiextc TO extension1.
    ENDLOOP.


    clear return[].
    LOOP AT ls_out-return-item INTO ls_return.
      MOVE-CORRESPONDING ls_return TO ls_bapiret2.
      APPEND ls_bapiret2 TO return.
    ENDLOOP.

    clear travel[].
    LOOP AT ls_out-travel-item INTO ls_travel.
      MOVE-CORRESPONDING ls_travel TO ls_bapiactr00.

      CONCATENATE ls_travel-PSTNG_DATE+0(4) ls_travel-PSTNG_DATE+5(2) ls_travel-PSTNG_DATE+8(2)
             into ls_bapiactr00-PSTNG_DATE.

      CONCATENATE ls_travel-FM_TRANS_DATE+0(4) ls_travel-FM_TRANS_DATE+5(2) ls_travel-FM_TRANS_DATE+8(2)
             into ls_bapiactr00-FM_TRANS_DATE.

      APPEND ls_bapiactr00 TO travel.
    ENDLOOP.

    clear travelamount[].
    LOOP AT ls_out-travelamount-item INTO ls_travelamount.
      MOVE-CORRESPONDING ls_travelamount TO ls_bapiaccrpo.
      APPEND ls_bapiaccrpo TO travelamount.
    ENDLOOP.


  CATCH cx_ai_system_fault INTO lo_exception.
    lv_error = lo_exception->get_text( ).

    CLEAR ls_bapiret2.
    ls_bapiret2-type       = 'E'.
    ls_bapiret2-id         = 'Z_HCM_MSGCLASS'.
    ls_bapiret2-number     = 167.
    ls_bapiret2-MESSAGE_V1 = lv_error.
    MESSAGE e167(z_hcm_msgclass) WITH lv_error INTO ls_bapiret2-message.

    APPEND ls_bapiret2 TO return.
ENDTRY.

RETURN.

ENDENHANCEMENT.