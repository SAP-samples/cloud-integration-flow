{
  "stats": {
    "suites": 1,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-21T01:21:48.326Z",
    "end": "2025-01-21T01:22:33.675Z",
    "duration": 45349,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "279983c5-6372-4b94-ac42-fedd572f2a7f",
      "title": "",
      "fullFile": "cypress/camel3/matrixPP-test.ts",
      "file": "cypress/camel3/matrixPP-test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
          "title": "SAP Camel 3 Adapter - Matrix PP Regression Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Pricefx access token",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Update Pricefx access token",
              "timedOut": null,
              "duration": 3373,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();",
              "err": {},
              "uuid": "2d9eb64f-780b-4ff2-a522-dfb849c8b887",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete test data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Delete test data",
              "timedOut": null,
              "duration": 3467,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nlet requestMessage = utils.buildBasicDeleteRequest('MATRIX_PP', deleteAllDataCriteria, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "1a2a0d9a-0c75-4bc5-b95d-3700d123819c",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch test data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch test data",
              "timedOut": null,
              "duration": 2668,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": deleteAllDataCriteria,\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.deep.equal({});\n});",
              "err": {},
              "uuid": "426b311d-6050-43e2-a01b-679982385f18",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bulk data load",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Bulk data load",
              "timedOut": null,
              "duration": 9031,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const header = [\n    \"key1\",\n    \"key2\",\n    \"attribute1\"\n];\nconst data = [\n    [\n        \"MPP-BulkLoadRegTest1\",\n        111,\n        \"MPP-BulkLoadRegTest1-attr1\"\n    ],\n    [\n        \"MPP-BulkLoadRegTest2\",\n        222,\n        \"MPP-BulkLoadRegTest2-attr1\"\n    ],\n    [\n        \"MPP-BulkLoadRegTest3\",\n        333,\n        \"MPP-BulkLoadRegTest3-attr1\"\n    ]\n];\ncy.validateBulkloadRequestSchema(header, data, 'key2', 'MATRIX_PP');",
              "err": {},
              "uuid": "54df81d6-c218-4aa5-a51e-53d8f9aa35e2",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bulk data load - wrong data type",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Bulk data load - wrong data type",
              "timedOut": null,
              "duration": 1206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst header = [\n    \"key1\",\n    \"key2\",\n    \"attribute1\"\n];\nconst data = [\n    [\n        \"MPP-BulkLoadRegTest1\",\n        \"111\",\n        \"MPP-BulkLoadRegTest1-attr1-updated\"\n    ],\n    [\n        \"MPP-BulkLoadRegTest2\",\n        \"XXX\",\n        \"MPP-BulkLoadRegTest2-attr1\"\n    ],\n    [\n        \"MPP-BulkLoadRegTest3\",\n        333,\n        \"MPP-BulkLoadRegTest3-attr1-updated\"\n    ]\n];\nlet requestMessage = utils.buildBasicBulkLoadRequest('MATRIX_PP', header, data, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eql('Error in Line 2 - Schema Validation failed. Malformed json message.: key2 should be numeric.');\n});",
              "err": {},
              "uuid": "1d2613cf-7889-4729-9267-e95ff49fc095",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch bulk loaded data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch bulk loaded data",
              "timedOut": null,
              "duration": 2327,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"key1\",\n                \"operator\": \"contains\",\n                \"value\": \"MPP-BulkLoadRegTest\"\n            },\n            {\n                \"fieldName\": \"key2\",\n                \"operator\": \"equals\",\n                \"value\": 111\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(1);\n    expect(response.body[0].key1).to.eql(\"MPP-BulkLoadRegTest1\");\n    expect(response.body[0].attribute1).to.eql(\"MPP-BulkLoadRegTest1-attr1\");\n});",
              "err": {},
              "uuid": "75483709-b552-4cd6-9b10-55e482b3515c",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bulk data load - update",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Bulk data load - update",
              "timedOut": null,
              "duration": 2755,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst header = [\n    \"key1\",\n    \"key2\",\n    \"attribute1\"\n];\nconst data = [\n    [\n        \"MPP-BulkLoadRegTest1\",\n        111,\n        \"MPP-BulkLoadRegTest1-attr1-updated\"\n    ],\n    [\n        \"MPP-BulkLoadRegTest2\",\n        222,\n        \"MPP-BulkLoadRegTest2-attr1\"\n    ],\n    [\n        \"MPP-BulkLoadRegTest3\",\n        333,\n        \"MPP-BulkLoadRegTest3-attr1\"\n    ]\n];\nlet requestMessage = utils.buildBasicBulkLoadRequest('MATRIX_PP', header, data, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "4ff2a339-5bba-4f53-a3e2-486fcaa22d32",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch bulk load updated data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch bulk load updated data",
              "timedOut": null,
              "duration": 3000,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"key1\",\n                \"operator\": \"contains\",\n                \"value\": \"MPP-BulkLoadRegTest\"\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(3);\n    expect(response.body[0].key1).to.eql(\"MPP-BulkLoadRegTest1\");\n    expect(response.body[0].attribute1).to.eql(\"MPP-BulkLoadRegTest1-attr1-updated\");\n    expect(response.body[1].key1).to.eql(\"MPP-BulkLoadRegTest2\");\n    expect(response.body[1].attribute1).to.eql(\"MPP-BulkLoadRegTest2-attr1\");\n});",
              "err": {},
              "uuid": "6c79a6ac-c92e-4e8b-b57d-d1834fce2c88",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upsert",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Upsert",
              "timedOut": null,
              "duration": 8608,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = [\n    {\n        \"key1\": \"MPP-RegTest1\",\n        \"key2\": 11,\n        \"attribute1\": \"MPP-RegTest1-attr1\",\n        \"attribute2\": \"MPP-RegTest1-attr2\"\n    },\n    {\n        \"key1\": \"MPP-RegTest2\",\n        \"key2\": 22,\n        \"attribute1\": \"MPP-RegTest2-attr1\",\n        \"attribute2\": \"MPP-RegTest2-attr2\"\n    }\n];\ncy.validateUpsertRequestSchema(payload, 'key2', 'MATRIX_PP');",
              "err": {},
              "uuid": "56631f51-c43a-48ad-ad8b-4a63908a9648",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upsert - wrong data type",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Upsert - wrong data type",
              "timedOut": null,
              "duration": 2384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = [\n    {\n        \"key1\": \"MPP-RegTest1\",\n        \"key2\": \"XX\",\n        \"attribute1\": \"MPP-RegTest1-attr1\",\n        \"attribute2\": \"MPP-RegTest1-attr2\"\n    },\n    {\n        \"key1\": \"MPP-RegTest2\",\n        \"key2\": 22,\n        \"attribute1\": \"MPP-RegTest2-attr1\",\n        \"attribute2\": \"MPP-RegTest2-attr2-updated\"\n    }\n];\nlet requestMessage = utils.buildBasicUpsertRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eql('Error in Line 1 - Schema Validation failed. Malformed json message.: key2 should be numeric.');\n});",
              "err": {},
              "uuid": "2f3a33ac-9de3-4f1d-b85f-e0c7c34fe0d4",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch with system fields",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch with system fields",
              "timedOut": null,
              "duration": 868,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"key1\",\n                \"operator\": \"contains\",\n                \"value\": \"MPP-RegTest\"\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchSystemFieldsRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(2);\n    expect(response.body[0].version).not.null;\n    expect(response.body[0].key1).to.eql(\"MPP-RegTest1\");\n    expect(response.body[0].key2).to.eql(11);\n    expect(response.body[0].attribute1).to.eql(\"MPP-RegTest1-attr1\");\n    expect(response.body[0].attribute2).to.eql(\"MPP-RegTest1-attr2\");\n    expect(response.body[1].version).not.null;\n    expect(response.body[1].key1).to.eql(\"MPP-RegTest2\");\n    expect(response.body[1].key2).to.eql(22);\n    expect(response.body[1].attribute1).to.eql(\"MPP-RegTest2-attr1\");\n    expect(response.body[1].attribute2).to.eql(\"MPP-RegTest2-attr2\");\n});",
              "err": {},
              "uuid": "d51f9343-b4c9-4f49-85bd-b8915b05a184",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upsert",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Upsert",
              "timedOut": null,
              "duration": 525,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = [\n    {\n        \"key1\": \"MPP-RegTest2\",\n        \"key2\": 22,\n        \"attribute1\": \"MPP-RegTest2-attr1\",\n        \"attribute2\": \"MPP-RegTest2-attr2-updated\"\n    }\n];\nlet requestMessage = utils.buildBasicUpsertRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    const jsonData = response.body;\n    expect(response.body.key1).to.eql(\"MPP-RegTest2\");\n    expect(response.body.key2).to.eql(22);\n    expect(response.body.attribute1).to.eql(\"MPP-RegTest2-attr1\");\n    expect(response.body.attribute2).to.eql(\"MPP-RegTest2-attr2-updated\");\n});",
              "err": {},
              "uuid": "7bf0d353-d57e-4b99-adf0-b6069c8add19",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch test data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch test data",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [{\n                \"fieldName\": \"key1\",\n                \"operator\": \"equals\",\n                \"value\": \"MPP-RegTest2\"\n            }],\n        \"operator\": \"or\"\n    },\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(1);\n    const jsonData = response.body;\n    expect(jsonData[0].key1).to.eql(\"MPP-RegTest2\");\n    expect(jsonData[0].key2).to.eql(22);\n    expect(jsonData[0].attribute1).to.eql(\"MPP-RegTest2-attr1\");\n    expect(jsonData[0].attribute2).to.eql(\"MPP-RegTest2-attr2-updated\");\n});",
              "err": {},
              "uuid": "36a31d88-0432-484b-b5b1-68b6759b10c2",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Metadata",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Metadata",
              "timedOut": null,
              "duration": 1734,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nlet requestMessage = utils.buildBasicMetadataRequest('MATRIX_PP', authToken);\ncy.request(requestMessage).then((response) => {\n    const jsonData = JSON.parse(response.body);\n    expect(jsonData[0].fieldName).to.eql(\"attribute1\");\n    expect(jsonData[0].label).to.eql(\"Attribute 1\");\n    expect(jsonData[0].fieldType).to.eql(\"STRING\");\n    expect(jsonData[0].requiredField).to.eql(true);\n    expect(jsonData[0].readOnly).to.eql(false);\n});",
              "err": {},
              "uuid": "f6d318e6-2063-4a52-93ec-f38511f9d16b",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch Count",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch Count",
              "timedOut": null,
              "duration": 1062,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": deleteAllDataCriteria,\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchCountRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(parseInt(response.body)).to.eq(5);\n});",
              "err": {},
              "uuid": "10b7cce4-5b7a-4c4d-8d37-24f8cada64cb",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete test data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Delete test data",
              "timedOut": null,
              "duration": 758,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nlet requestMessage = utils.buildBasicDeleteRequest('MATRIX_PP', deleteAllDataCriteria, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "a4fecd2a-ef2a-4e25-85e5-931d633a0432",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch test data",
              "fullTitle": "SAP Camel 3 Adapter - Matrix PP Regression Test Fetch test data",
              "timedOut": null,
              "duration": 729,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": deleteAllDataCriteria,\n    \"sortBy\": [\n        \"key1\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('MATRIX_PP', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.deep.equal({});\n});",
              "err": {},
              "uuid": "36a577b7-aac5-4491-873f-ce0144424827",
              "parentUUID": "d6adc825-df3c-4e15-ac8d-9ba7fafe1262",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d9eb64f-780b-4ff2-a522-dfb849c8b887",
            "1a2a0d9a-0c75-4bc5-b95d-3700d123819c",
            "426b311d-6050-43e2-a01b-679982385f18",
            "54df81d6-c218-4aa5-a51e-53d8f9aa35e2",
            "1d2613cf-7889-4729-9267-e95ff49fc095",
            "75483709-b552-4cd6-9b10-55e482b3515c",
            "4ff2a339-5bba-4f53-a3e2-486fcaa22d32",
            "6c79a6ac-c92e-4e8b-b57d-d1834fce2c88",
            "56631f51-c43a-48ad-ad8b-4a63908a9648",
            "2f3a33ac-9de3-4f1d-b85f-e0c7c34fe0d4",
            "d51f9343-b4c9-4f49-85bd-b8915b05a184",
            "7bf0d353-d57e-4b99-adf0-b6069c8add19",
            "36a31d88-0432-484b-b5b1-68b6759b10c2",
            "f6d318e6-2063-4a52-93ec-f38511f9d16b",
            "10b7cce4-5b7a-4c4d-8d37-24f8cada64cb",
            "a4fecd2a-ef2a-4e25-85e5-931d633a0432",
            "36a577b7-aac5-4491-873f-ce0144424827"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44956,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "[status]_[datetime]-[name]-report",
        "timestamp": "longDate",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}