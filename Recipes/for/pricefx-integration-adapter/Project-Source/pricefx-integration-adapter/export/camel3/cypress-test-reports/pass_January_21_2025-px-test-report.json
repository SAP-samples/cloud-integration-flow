{
  "stats": {
    "suites": 1,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-21T01:22:57.904Z",
    "end": "2025-01-21T01:24:02.414Z",
    "duration": 64510,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5cc6e98c-b0b0-44cc-a3a3-0cdfb2ff0878",
      "title": "",
      "fullFile": "cypress/camel3/px-test.ts",
      "file": "cypress/camel3/px-test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
          "title": "SAP Camel 3 Adapter - PX Regression Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Pricefx access token",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Update Pricefx access token",
              "timedOut": null,
              "duration": 2738,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();",
              "err": {},
              "uuid": "8abef019-89d7-4813-853d-745bc7d76c69",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete test data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Delete test data",
              "timedOut": null,
              "duration": 5831,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nlet requestMessage = utils.buildBasicDeleteRequest('PX', deleteAllDataCriteria, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "3bb6d138-4992-44e8-890c-05a5de52c443",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch test data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch test data",
              "timedOut": null,
              "duration": 6015,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": deleteAllDataCriteria,\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.deep.equal({});\n});",
              "err": {},
              "uuid": "98a48cd4-8f52-43e6-8c38-89f52636c883",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bulk data load",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Bulk data load",
              "timedOut": null,
              "duration": 6646,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const header = [\n    \"sku\",\n    \"attribute1\",\n    \"attribute2\",\n    \"attribute4\"\n];\nconst data = [\n    [\n        \"PX-BulkLoadRegTest1\",\n        \"attr1\",\n        101,\n        \"attr4\"\n    ],\n    [\n        \"PX-BulkLoadRegTest2\",\n        \"attr1\",\n        102,\n        \"attr4\"\n    ],\n    [\n        \"PX-BulkLoadRegTest3\",\n        \"attr1\",\n        103,\n        \"attr4\"\n    ]\n];\ncy.validateBulkloadRequestSchema(header, data, 'attribute4', 'PX');",
              "err": {},
              "uuid": "a5d1a44e-c95f-4933-80fa-a1d117634035",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bulk data load - wrong data type",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Bulk data load - wrong data type",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst header = [\n    \"sku\",\n    \"attribute1\",\n    \"attribute2\",\n    \"attribute4\"\n];\nconst data = [\n    [\n        \"PX-BulkLoadRegTest1\",\n        \"attr1\",\n        \"101\",\n        \"attr4\"\n    ],\n    [\n        \"PX-BulkLoadRegTest2\",\n        \"attr1\",\n        \"xxx\",\n        \"attr4-updated\"\n    ],\n    [\n        \"PX-BulkLoadRegTest3\",\n        \"attr1\",\n        103,\n        \"attr4-updated\"\n    ]\n];\nlet requestMessage = utils.buildBasicBulkLoadRequest('PX', header, data, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eql('Error in Line 2 - Schema Validation failed. Malformed json message.: attribute2 should be numeric.');\n});",
              "err": {},
              "uuid": "f6980c3a-c67d-4b2f-a3c3-fc926f9c3513",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch bulk loaded data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch bulk loaded data",
              "timedOut": null,
              "duration": 1364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"sku\",\n                \"operator\": \"contains\",\n                \"value\": \"PX-BulkLoadRegTest\"\n            },\n            {\n                \"fieldName\": \"attribute2\",\n                \"operator\": \"greaterThan\",\n                \"value\": 0\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(3);\n    expect(response.body[0].sku).to.eql(\"PX-BulkLoadRegTest1\");\n    expect(response.body[0].attribute2).to.eql(101);\n    expect(response.body[0].attribute4).to.eql(\"attr4\");\n    expect(response.body[1].sku).to.eql(\"PX-BulkLoadRegTest2\");\n    expect(response.body[1].attribute2).to.eql(102);\n    expect(response.body[1].attribute4).to.eql(\"attr4\");\n});",
              "err": {},
              "uuid": "65d5f580-8017-4786-b9f3-43b7a7af2233",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bulk data load - update",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Bulk data load - update",
              "timedOut": null,
              "duration": 2610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst header = [\n    \"sku\",\n    \"attribute1\",\n    \"attribute2\",\n    \"attribute4\"\n];\nconst data = [\n    [\n        \"PX-BulkLoadRegTest1\",\n        \"attr1\",\n        101,\n        \"attr4\"\n    ],\n    [\n        \"PX-BulkLoadRegTest2\",\n        \"attr1\",\n        102,\n        \"attr4\"\n    ],\n    [\n        \"PX-BulkLoadRegTest3\",\n        \"attr1\",\n        103,\n        \"attr4-updated\"\n    ]\n];\nlet requestMessage = utils.buildBasicBulkLoadRequest('PX', header, data, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "3b99ca29-7b70-4149-bef4-3d1e299e0935",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch bulk load updated data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch bulk load updated data",
              "timedOut": null,
              "duration": 2376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"sku\",\n                \"operator\": \"contains\",\n                \"value\": \"PX-BulkLoadRegTest\"\n            },\n            {\n                \"fieldName\": \"attribute2\",\n                \"operator\": \"greaterThan\",\n                \"value\": 0\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(3);\n    expect(response.body[0].sku).to.eql(\"PX-BulkLoadRegTest1\");\n    expect(response.body[0].attribute2).to.eql(101);\n    expect(response.body[0].attribute4).to.eql(\"attr4\");\n    expect(response.body[2].sku).to.eql(\"PX-BulkLoadRegTest3\");\n    expect(response.body[2].attribute2).to.eql(103);\n    expect(response.body[2].attribute4).to.eql(\"attr4-updated\");\n});",
              "err": {},
              "uuid": "f9c844a3-abb0-4b46-a095-bf9c0a7c09a6",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upsert",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Upsert",
              "timedOut": null,
              "duration": 9891,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = [\n    {\n        \"sku\": \"PX-RegTest1\",\n        \"attribute1\": \"PX-RegTest1-attr1\",\n        \"attribute2\": 201,\n        \"attribute4\": \"PX-RegTest1-attr4\"\n    },\n    {\n        \"sku\": \"PX-RegTest2\",\n        \"attribute1\": \"PX-RegTest2-attr1\",\n        \"attribute2\": 301,\n        \"attribute4\": \"PX-RegTest2-attr4\"\n    }\n];\ncy.validateUpsertRequestSchema(payload, 'attribute4', 'PX');",
              "err": {},
              "uuid": "2f25b714-6a09-4576-b205-f8724783568c",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upsert - wrong data type",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Upsert - wrong data type",
              "timedOut": null,
              "duration": 2827,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = [\n    {\n        \"sku\": \"PX-RegTest1\",\n        \"attribute1\": \"PX-RegTest1-attr1\",\n        \"attribute2\": \"xxx\",\n        \"attribute4\": \"PX-RegTest1-attr4\"\n    },\n    {\n        \"sku\": \"PX-RegTest2\",\n        \"attribute1\": \"PX-RegTest2-attr1\",\n        \"attribute2\": 301,\n        \"attribute4\": \"PX-RegTest2-attr4-updated\"\n    }\n];\nlet requestMessage = utils.buildBasicUpsertRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eql('Error in Line 1 - Schema Validation failed. Malformed json message.: attribute2 should be numeric.');\n});",
              "err": {},
              "uuid": "9b1e49bf-a2d4-42e4-af61-cd0055a401d7",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch with system fields",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch with system fields",
              "timedOut": null,
              "duration": 3252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"sku\",\n                \"operator\": \"contains\",\n                \"value\": \"PX-RegTest\"\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchSystemFieldsRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(2);\n    expect(response.body[0].version).not.null;\n    expect(response.body[0].sku).to.eql(\"PX-RegTest1\");\n    expect(response.body[0].attribute1).to.eql(\"PX-RegTest1-attr1\");\n    expect(response.body[0].attribute2).to.eql(201);\n    expect(response.body[0].attribute4).to.eql(\"PX-RegTest1-attr4\");\n    expect(response.body[1].version).not.null;\n    expect(response.body[1].sku).to.eql(\"PX-RegTest2\");\n    expect(response.body[1].attribute1).to.eql(\"PX-RegTest2-attr1\");\n    expect(response.body[1].attribute2).to.eql(301);\n    expect(response.body[1].attribute4).to.eql(\"PX-RegTest2-attr4\");\n});",
              "err": {},
              "uuid": "e479ff85-a31a-4b8a-9350-b58d6f64c59c",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upsert",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Upsert",
              "timedOut": null,
              "duration": 12807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = [\n    {\n        \"sku\": \"PX-RegTest2\",\n        \"attribute1\": \"PX-RegTest2-attr1\",\n        \"attribute2\": 301,\n        \"attribute4\": \"PX-RegTest2-attr4-updated\"\n    }\n];\nlet requestMessage = utils.buildBasicUpsertRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    const jsonData = response.body;\n    expect(response.body.sku).to.eql(\"PX-RegTest2\");\n    expect(response.body.attribute1).to.eql(\"PX-RegTest2-attr1\");\n    expect(response.body.attribute2).to.eql(301);\n    expect(response.body.attribute4).to.eql(\"PX-RegTest2-attr4-updated\");\n});",
              "err": {},
              "uuid": "f99e1d80-704f-4120-8249-bc17a38f46eb",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch test data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch test data",
              "timedOut": null,
              "duration": 2203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": {\n        \"criteria\": [\n            {\n                \"fieldName\": \"sku\",\n                \"operator\": \"contains\",\n                \"value\": \"PX-RegTest\"\n            }\n        ],\n        \"operator\": \"and\"\n    },\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.length).to.eql(2);\n    const jsonData = response.body;\n    expect(response.body[1].version).not.null;\n    expect(response.body[1].sku).to.eql(\"PX-RegTest2\");\n    expect(response.body[1].attribute1).to.eql(\"PX-RegTest2-attr1\");\n    expect(response.body[1].attribute2).to.eql(301);\n    expect(response.body[1].attribute4).to.eql(\"PX-RegTest2-attr4-updated\");\n});",
              "err": {},
              "uuid": "cb2b3d29-cc78-49e9-b7ee-8fec3a6375a7",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Metadata",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Metadata",
              "timedOut": null,
              "duration": 1116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nlet requestMessage = utils.buildBasicMetadataRequest('PX', authToken);\ncy.request(requestMessage).then((response) => {\n    const jsonData = JSON.parse(response.body);\n    expect(jsonData[0].fieldName).to.eql(\"attribute1\");\n    expect(jsonData[0].label).to.eql(\"Attribute 1\");\n    expect(jsonData[0].fieldType).to.eql(\"STRING\");\n    expect(jsonData[0].requiredField).to.eql(false);\n    expect(jsonData[0].readOnly).to.eql(false);\n    expect(jsonData[0].labelTranslations).to.eql(\"Product Desc\");\n});",
              "err": {},
              "uuid": "62052a28-203b-47d2-b28b-74492b415b84",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch Count",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch Count",
              "timedOut": null,
              "duration": 762,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": deleteAllDataCriteria,\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchCountRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(parseInt(response.body)).to.eq(5);\n});",
              "err": {},
              "uuid": "b5f9de14-c917-4c94-8da7-0231fcc5799a",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete test data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Delete test data",
              "timedOut": null,
              "duration": 758,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nlet requestMessage = utils.buildBasicDeleteRequest('PX', deleteAllDataCriteria, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "dba71e76-e6bf-4b63-8a1b-522e8f2c83b7",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch test data",
              "fullTitle": "SAP Camel 3 Adapter - PX Regression Test Fetch test data",
              "timedOut": null,
              "duration": 2441,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = Cypress.env('authToken');\nconst payload = {\n    \"data\": deleteAllDataCriteria,\n    \"sortBy\": [\n        \"sku\"\n    ]\n};\nlet requestMessage = utils.buildBasicFetchRequest('PX', payload, authToken);\ncy.request(requestMessage).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.deep.equal({});\n});",
              "err": {},
              "uuid": "184b8714-b9fb-4476-a6f3-f1041329fd36",
              "parentUUID": "d43ed9e0-ecb3-424e-b018-b0b617899bf9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8abef019-89d7-4813-853d-745bc7d76c69",
            "3bb6d138-4992-44e8-890c-05a5de52c443",
            "98a48cd4-8f52-43e6-8c38-89f52636c883",
            "a5d1a44e-c95f-4933-80fa-a1d117634035",
            "f6980c3a-c67d-4b2f-a3c3-fc926f9c3513",
            "65d5f580-8017-4786-b9f3-43b7a7af2233",
            "3b99ca29-7b70-4149-bef4-3d1e299e0935",
            "f9c844a3-abb0-4b46-a095-bf9c0a7c09a6",
            "2f25b714-6a09-4576-b205-f8724783568c",
            "9b1e49bf-a2d4-42e4-af61-cd0055a401d7",
            "e479ff85-a31a-4b8a-9350-b58d6f64c59c",
            "f99e1d80-704f-4120-8249-bc17a38f46eb",
            "cb2b3d29-cc78-49e9-b7ee-8fec3a6375a7",
            "62052a28-203b-47d2-b28b-74492b415b84",
            "b5f9de14-c917-4c94-8da7-0231fcc5799a",
            "dba71e76-e6bf-4b63-8a1b-522e8f2c83b7",
            "184b8714-b9fb-4476-a6f3-f1041329fd36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 64089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "[status]_[datetime]-[name]-report",
        "timestamp": "longDate",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}